# Generated by Django 3.2.3 on 2021-05-22 19:55

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('header_image', models.ImageField(blank=True, default='', null=True, upload_to='images/')),
                ('heading', models.CharField(max_length=2000)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_date', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, null=True)),
                ('updated_date', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, null=True)),
                ('description', models.CharField(default='', max_length=2000)),
                ('is_active', models.BooleanField(default=True)),
                ('slug', models.SlugField(default='', editable=False, max_length=2000, null=True, unique=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Author', to=settings.AUTH_USER_MODEL)),
                ('blog_tags', models.ManyToManyField(blank=True, related_name='Tags', to='blogs.BlogTags')),
                ('blog_type', models.ForeignKey(blank=True, default='None', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='Type', to='blogs.blogtype', to_field='name')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
    ]
