# Generated by Django 3.2.3 on 2021-05-22 19:55

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('first_name', models.CharField(blank=True, max_length=700, null=True)),
                ('last_name', models.CharField(blank=True, max_length=700, null=True)),
                ('username', models.CharField(default='', max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('profile_image', models.ImageField(blank=True, default='', null=True, upload_to='images/')),
                ('linkedin_profile', models.CharField(blank=True, max_length=700, null=True)),
                ('twitter_profile', models.CharField(blank=True, max_length=700, null=True)),
                ('facebook_profile', models.CharField(blank=True, max_length=700, null=True)),
                ('other_links', models.CharField(blank=True, max_length=700, null=True)),
                ('education', models.CharField(blank=True, max_length=700, null=True)),
                ('address', models.CharField(blank=True, max_length=700, null=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Admin')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
